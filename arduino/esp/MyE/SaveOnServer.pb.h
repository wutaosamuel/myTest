/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9.3 at Mon Aug 05 22:55:45 2019. */

#ifndef PB_SAVEONSERVER_PB_H_INCLUDED
#define PB_SAVEONSERVER_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _SaveOnServer {
    pb_callback_t device_id_mac;
    int32_t group_id;
    int32_t device_type;
/* @@protoc_insertion_point(struct:SaveOnServer) */
} SaveOnServer;

/* Default values for struct fields */

/* Initializer values for message structs */
#define SaveOnServer_init_default                {{{NULL}, NULL}, 0, 0}
#define SaveOnServer_init_zero                   {{{NULL}, NULL}, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define SaveOnServer_device_id_mac_tag           1
#define SaveOnServer_group_id_tag                2
#define SaveOnServer_device_type_tag             3

/* Struct field encoding specification for nanopb */
extern const pb_field_t SaveOnServer_fields[4];

/* Maximum encoded size of messages (where known) */
/* SaveOnServer_size depends on runtime parameters */

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define SAVEONSERVER_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
